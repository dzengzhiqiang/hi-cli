#!/bin/bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: 2017-02-11
###############################################################################

if [ "${HI_CLI_HOME}" == "" ]; then
  echo ""
  echo "Warning:"
  echo "Please install hi-cli first!"
  echo "cd /path/to/hi-cli/bin"
  echo "./install"
  exit
fi

module_name=$1
submodule_name=$2

source "${HI_CLI_HOME}/bin/colors"
source "${HI_CLI_HOME}/bin/clap"
source "${HI_CLI_HOME}/bin/logging"
source "${HI_CLI_HOME}/bin/version"
source "${HI_CLI_HOME}/bin/usage"
source "${HI_CLI_HOME}/bin/utils"

modules=""

module_conf="${HI_CLI_HOME}/modules/${module_name}/hi.conf"
if [ -f "${module_conf}" ]; then
  source "${module_conf}"
fi
#log_debug "${filter}"
if [ "${filters}" != "" ]; then
  modules=""
  array=($filters)
  echo filters: $filters
  for f in "${array[@]}" 
  do
    log_debug "ef: ${f}"
    find_modules m "${f}"
    modules="${modules} ${m}"
    log_debug "modules: ${modules}"
  done

  if [ "${modules}" == "" ]; then
    log_info "No module found!"
    exit
  fi

else
  log_error "filters is not found in hi.conf"
  exit
fi

app="hi"

log_info "Running: ${CMD_LINE}"

function main() {
  custom_module="${HI_CLI_HOME}/modules/${module_name}/${submodule_name}"
  module_cmd=${CMD_LINE}
  if [ -f "${custom_module}" ]; then
    module_cmd=${module_cmd/-all/}
  else
    show_version
    module_cmd=${module_cmd/hi-all/}
  fi
  if [ "${unlimited}" == "unlimited" ]; then
    module_cmd=${module_cmd/unlimited/}
  fi

  module_cmd=${module_cmd/hi_debug/}

  log_debug "modules: ${modules}"
  for module in ${modules} 
  do
    log_info "=> ${module}"
    pushd "${module}" > /dev/null
    
    ${module_cmd}
    
    popd > /dev/null
  done
  exit 0
}
main
