#!/usr/bin/env bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: 2017-02-11
###############################################################################

if [ "${HI_CLI_HOME}" == "" ]; then
  if [ -f "/usr/local/hi-cli/bin/hi" ]; then
    HI_CLI_HOME="/usr/local/hi-cli"
    PATH="${HI_CLI_HOME}/bin":$PATH
  else
    echo ""
    echo "Warning:"
    echo "Please install hi-cli first!"
    echo "cd /path/to/hi-cli/"
    echo "./bin/install"
    exit
  fi
fi

module_name=$1
submodule_name=$2
command_name=$3
arg0=$0
arg1=$1
arg2=$2
arg3=$3
arg4=$4
arg5=$5
arg6=$6

source "${HI_CLI_HOME}/bin/utils"

function run() {
    eval $1="1"
    eval $2="unimplemented"
}

function import() {
  imported_source="$1"
  if [ -f "${imported_source}" ];
  then
    # echo "${imported_source}"
    source "${imported_source}"
  fi
}

export working_dir=$PWD

import "${HI_CLI_HOME}/bin/${module_name}/init"

default_module="${HI_CLI_HOME}/bin/${module_name}/${submodule_name}"

module_path="${HI_CLI_HOME}/modules/${module_name}/${submodule_name}"
if [ "${command_name}" != "" ]; 
then
  sub_module_path="${HI_CLI_HOME}/modules/${module_name}/${submodule_name}/${command_name}"
  if [ -f "${sub_module_path}" ]; 
  then
    module_path="${sub_module_path}"
  fi
fi
export module_path

get_dir_from_path module_dir "${module_path}"
export module_dir

get_file_from_path module_command "${module_path}"
export module_command

import "${HI_CLI_HOME}/bin/${module_name}/hi.conf"
import "${module_dir}/hi.conf"
import "${HOME}/.${module_name}/hi.conf"
import "${PWD}/hi.conf"

source "${HI_CLI_HOME}/bin/clap"
source "${HI_CLI_HOME}/bin/colors"
source "${HI_CLI_HOME}/bin/logging"
source "${HI_CLI_HOME}/bin/version"
source "${HI_CLI_HOME}/bin/usage"
source "${HI_CLI_HOME}/bin/sys"
source "${HI_CLI_HOME}/utils/input"

#log_info "Running: ${CMD_LINE}"
hi_app="hi"

function main() {
  log_info "hi ${module_name}"
  # below import must is in order
  import "${module_dir}/init"
  import "${default_module}"
  import "${module_path}"

  if [ "${hide_version}" == "" ]; then
    show_version
  fi

  result=0
  cli=${cli}
  run result cli

  log_debug "result: ${result}"
  log_debug "cli: ${cli}"
  if [ "${result}" == "1" ] && [ "${cli}" == "unimplemented" ]; then
    if [ "${hi_alias}" != "" ]; then
      log_debug "cmd_line: ${CMD_LINE}"
      default_cli="${hi_alias} ${CMD_LINE/hi ${module_name} /}"
      default_cli="${default_cli/dbg/}"
      log_debug "default_cli: ${default_cli/dbg/}"
      ${default_cli}
      exit
    fi

    show_hi_usage

    [[ "${arg1}" == "" ]] && exit 0 || exit 1
  fi

  if [ ${result} == 0 ]; then
    log_info "success: ${cli}"
  else
    log_error "failed: ${cli}"
  fi
  
  exit 0
}

main
