#!/bin/bash
###############################################################################
# Project: hi-cli
# Description: The cross platform development toolkit - hi-cli
# Author: John Deng (john.deng@outlook.com)
#
# Copyright (c) 2014-2017 John Deng (john.deng@outlook.com)
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#    http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#
# Author: John Deng (john.deng@outlook.com)
# Updated: Sun Mar 26 23:19:45 CST 2017
# Module: package
# Submodule: 
# Command: install
###############################################################################

source "${HI_CLI_HOME}/bin/colors"
source "${HI_CLI_HOME}/bin/clap"
source "${HI_CLI_HOME}/bin/logging"
source "${HI_CLI_HOME}/bin/init-app"

parser="${HI_CLI_HOME}/utils/parser.py"
###############################################################################
function run() {
  log_debug "install hi-cli package ..."
  hi_package="${arg3}"
  result=1
  
  if [ ! -f "${HOME}/.${hi_package}/hi.conf" ]; then
    mkdir -p "${HOME}/.${hi_package}/" 
    init_app "${HOME}/.${hi_package}" "$(whoami)" "${hi_package}"
  fi

  if [ "${hi_package}" != "" ];
  then
    if [ "${force}" == "force" ];
    then
      rm -rf "${HI_CLI_HOME}/modules/${hi_package}"
    fi
    module_url=${url}
    log_debug "url: ${url}"
    if [ "${module_url}" == "" ]; then
      module_url="${hi_cli_host}/hi-cli/hi-${hi_package}.git"
      if [ $(is_url_available "${module_url}") == "no" ]; then
        package_json_file=$(cat ${HI_CLI_HOME}/conf/package.json)
        # parse_json module_url "${package_json_file}" modules ${hi_package} url
        module_url=$(python ${parser} file "${HI_CLI_HOME}/conf/package.json" modules ${hi_package} url)
      fi
    fi
    log_debug "module_url: ${module_url}"
    # update only if it exist
    if [ -d "${HI_CLI_HOME}/modules/${hi_package}" ]; then
      cli="git pull"
      pushd "${HI_CLI_HOME}/modules/${hi_package}" > /dev/null
      ${cli}
      result=$?
    else
      cli="git clone ${module_url} ${hi_package}"
      pushd "${HI_CLI_HOME}/modules" > /dev/null
      ${cli}
      result=$?
    fi
    if [ "${ver}" != "" ]; then
      pushd "${HI_CLI_HOME}/modules/${hi_package}" > /dev/null
      git checkout ${ver}
      popd > /dev/null
    fi
    hi_module_install="${HI_CLI_HOME}/modules/${hi_package}/.install"
    if [ ${result} == 0 ] && [ -f "${hi_module_install}"  ]; then
      source "${hi_module_install}"
      install
      result=$?
    fi

    popd > /dev/null
  fi

  return ${result}
}

###############################################################################
